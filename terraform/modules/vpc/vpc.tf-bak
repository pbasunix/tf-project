# VPC creation 

resource "aws_vpc" "demoVPC" {
  cidr_block       = var.vpc_cidr
  instance_tenancy = var.vpc_tenancy
  enable_dns_hostnames = true

  tags = {
    Name     = "demoVPC"
    Location = "us-east-2"
  }
}

# Public Subnet 

resource "aws_subnet" "public-sn" {
  vpc_id            = aws_vpc.demoVPC.id
  cidr_block        = var.public_sn_cidr
  availability_zone = "us-east-2a"

  tags = {
    Name = "Public Subnet"
  }
}

# Private Subnet

resource "aws_subnet" "private-sn" {
  vpc_id            = aws_vpc.demoVPC.id
  cidr_block        = var.private_sn_cidr
  availability_zone = "us-east-2b"

  tags = {
    Name = "Private Subnet"
  }
}

# Public Route Table

resource "aws_route_table" "public-rt" {
  vpc_id = aws_vpc.demoVPC.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.igw.id
  }

  tags = {
    Name = "Public Route Table"
  }
}

# Associate Public route table to public subnet

resource "aws_route_table_association" "public-rt" {
  subnet_id      = aws_subnet.public-sn.id
  route_table_id = aws_route_table.public-rt.id
}


# Private Route Table

resource "aws_route_table" "private-rt" {
  vpc_id = aws_vpc.demoVPC.id

  route {
    # cidr_block = "0.0.0.0/0"
    # gateway_id = aws_internet_gateway.igw.id
  }

  tags = {
    Name = "Private Route Table"
  }
}

# Associate Private table to public subnet

resource "aws_route_table_association" "private-rt" {
  subnet_id      = aws_subnet.private-sn.id
  route_table_id = aws_route_table.private-rt.id
}


# Internet Gateway

resource "aws_internet_gateway" "igw" {
  vpc_id = aws_vpc.demoVPC.id

  tags = {
    Name = "Internet Gateway"
  }
}

# Public Security Group

resource "aws_security_group" "webSG" {
  name        = "public"
  description = "Allow SSH, HTTP ports open"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = -1
    to_port     = -1
    protocol    = "icmp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  vpc_id = aws_vpc.demoVPC.id

  tags = {
    Name = "webSG"
  }
}

# Private Security Group

resource "aws_security_group" "dbSG" {
  name        = "sg_test_web"
  description = "Allow traffic from public subnet"

  ingress {
    from_port   = 3306
    to_port     = 3306
    protocol    = "tcp"
    cidr_blocks = [var.public_sn_cidr]
  }

  ingress {
    from_port   = -1
    to_port     = -1
    protocol    = "icmp"
    cidr_blocks = [var.public_sn_cidr]
  }

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = [var.public_sn_cidr]
  }

  vpc_id = aws_vpc.demoVPC.id

  tags = {
    Name = "dbSG"
  }
}

